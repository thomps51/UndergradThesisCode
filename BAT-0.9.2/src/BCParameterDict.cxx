//
// File generated by /home/osg/manageTier3SW/ATLASLocalRootBase/i686/root/5.34.07-i686-slc5-gcc4.3/bin/rootcint at Tue Jul  2 14:21:10 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME BCParameterDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "BCParameterDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void BCParameter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void BCParameter_Dictionary();
   static void *new_BCParameter(void *p = 0);
   static void *newArray_BCParameter(Long_t size, void *p);
   static void delete_BCParameter(void *p);
   static void deleteArray_BCParameter(void *p);
   static void destruct_BCParameter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BCParameter*)
   {
      ::BCParameter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::BCParameter),0);
      static ::ROOT::TGenericClassInfo 
         instance("BCParameter", "./../BAT/BCParameter.h", 30,
                  typeid(::BCParameter), DefineBehavior(ptr, ptr),
                  0, &BCParameter_Dictionary, isa_proxy, 0,
                  sizeof(::BCParameter) );
      instance.SetNew(&new_BCParameter);
      instance.SetNewArray(&newArray_BCParameter);
      instance.SetDelete(&delete_BCParameter);
      instance.SetDeleteArray(&deleteArray_BCParameter);
      instance.SetDestructor(&destruct_BCParameter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BCParameter*)
   {
      return GenerateInitInstanceLocal((::BCParameter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BCParameter*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void BCParameter_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::BCParameter*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_BCParameter(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BCParameter : new ::BCParameter;
   }
   static void *newArray_BCParameter(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BCParameter[nElements] : new ::BCParameter[nElements];
   }
   // Wrapper around operator delete
   static void delete_BCParameter(void *p) {
      delete ((::BCParameter*)p);
   }
   static void deleteArray_BCParameter(void *p) {
      delete [] ((::BCParameter*)p);
   }
   static void destruct_BCParameter(void *p) {
      typedef ::BCParameter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BCParameter

/********************************************************
* BCParameterDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableBCParameterDict();

extern "C" void G__set_cpp_environmentBCParameterDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../BAT/BCParameter.h");
  G__cpp_reset_tagtableBCParameterDict();
}
#include <new>
extern "C" int G__cpp_dllrevBCParameterDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* BCParameter */
static int G__BCParameterDict_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BCParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BCParameter[n];
     } else {
       p = new((void*) gvp) BCParameter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BCParameter;
     } else {
       p = new((void*) gvp) BCParameter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BCParameterDictLN_BCParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCParameterDict_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BCParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BCParameter(
(const char*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) BCParameter(
(const char*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BCParameterDictLN_BCParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCParameterDict_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BCParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BCParameter(*(BCParameter*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) BCParameter(*(BCParameter*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BCParameterDictLN_BCParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCParameterDict_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const BCParameter& obj = ((BCParameter*) G__getstructoffset())->operator=(*(BCParameter*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCParameterDict_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((BCParameter*) G__getstructoffset())->GetName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCParameterDict_168_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BCParameter*) G__getstructoffset())->GetIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCParameterDict_168_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BCParameter*) G__getstructoffset())->GetLowerLimit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCParameterDict_168_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BCParameter*) G__getstructoffset())->GetUpperLimit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCParameterDict_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BCParameter*) G__getstructoffset())->GetRangeWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCParameterDict_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BCParameter*) G__getstructoffset())->SetName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCParameterDict_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BCParameter*) G__getstructoffset())->SetIndex((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCParameterDict_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((BCParameter*) G__getstructoffset())->SetLowerLimit((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((BCParameter*) G__getstructoffset())->SetLowerLimit();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCParameterDict_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((BCParameter*) G__getstructoffset())->SetUpperLimit((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((BCParameter*) G__getstructoffset())->SetUpperLimit();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCParameterDict_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((BCParameter*) G__getstructoffset())->SetLimits((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((BCParameter*) G__getstructoffset())->SetLimits((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((BCParameter*) G__getstructoffset())->SetLimits();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCParameterDict_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((BCParameter*) G__getstructoffset())->SetNuisance((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((BCParameter*) G__getstructoffset())->SetNuisance();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCParameterDict_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BCParameter*) G__getstructoffset())->IsNuisance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCParameterDict_168_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((BCParameter*) G__getstructoffset())->IsAtLimit((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCParameterDict_168_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BCParameter*) G__getstructoffset())->PrintSummary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BCParameter G__TBCParameter;
static int G__BCParameterDict_168_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BCParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BCParameter*) (soff+(sizeof(BCParameter)*i)))->~G__TBCParameter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BCParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BCParameter*) (soff))->~G__TBCParameter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* BCParameter */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncBCParameterDict {
 public:
  G__Sizep2memfuncBCParameterDict(): p(&G__Sizep2memfuncBCParameterDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncBCParameterDict::*p)();
};

size_t G__get_sizep2memfuncBCParameterDict()
{
  G__Sizep2memfuncBCParameterDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceBCParameterDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableBCParameterDict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__BCParameterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BCParameterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BCParameterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BCParameterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BCParameterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__BCParameterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BCParameterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BCParameterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BCParameterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BCParameterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<BCParameter*>",117,G__get_linked_tagnum(&G__BCParameterDictLN_vectorlEBCParametermUcOallocatorlEBCParametermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BCParameterDictLN_reverse_iteratorlEvectorlEBCParametermUcOallocatorlEBCParametermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BCParameterDictLN_vectorlEBCParametermUcOallocatorlEBCParametermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BCParameterDictLN_reverse_iteratorlEvectorlEBCParametermUcOallocatorlEBCParametermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BCParameterDictLN_vectorlEBCParametermUcOallocatorlEBCParametermUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* BCParameter */
static void G__setup_memvarBCParameter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BCParameterDictLN_BCParameter));
   { BCParameter *p; p=(BCParameter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BCParameterDictLN_string),-1,-1,4,"fName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fLowerLimit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fUpperLimit=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNuisance=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarBCParameterDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncBCParameter(void) {
   /* BCParameter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BCParameterDictLN_BCParameter));
   G__memfunc_setup("BCParameter",1062,G__BCParameterDict_168_0_1, 105, G__get_linked_tagnum(&G__BCParameterDictLN_BCParameter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BCParameter",1062,G__BCParameterDict_168_0_2, 105, G__get_linked_tagnum(&G__BCParameterDictLN_BCParameter), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name d - - 0 - lowerlimit "
"d - - 0 - upperlimit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BCParameter",1062,G__BCParameterDict_168_0_3, 105, G__get_linked_tagnum(&G__BCParameterDictLN_BCParameter), -1, 0, 1, 1, 1, 0, "u 'BCParameter' - 11 - parameter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BCParameterDict_168_0_4, 117, G__get_linked_tagnum(&G__BCParameterDictLN_BCParameter), -1, 1, 1, 1, 1, 0, "u 'BCParameter' - 11 - parameter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,G__BCParameterDict_168_0_5, 117, G__get_linked_tagnum(&G__BCParameterDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIndex",792,G__BCParameterDict_168_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLowerLimit",1320,G__BCParameterDict_168_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUpperLimit",1323,G__BCParameterDict_168_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRangeWidth",1293,G__BCParameterDict_168_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G__BCParameterDict_168_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIndex",804,G__BCParameterDict_168_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLowerLimit",1332,G__BCParameterDict_168_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 '0' limit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUpperLimit",1335,G__BCParameterDict_168_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 '1' limit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLimits",926,G__BCParameterDict_168_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 '0' lowerlimit d - - 0 '1' upperlimit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNuisance",1122,G__BCParameterDict_168_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' nuisance", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsNuisance",1010,G__BCParameterDict_168_0_16, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAtLimit",880,G__BCParameterDict_168_0_17, 103, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintSummary",1275,G__BCParameterDict_168_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'BCParameter' - 1 - parameter", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BCParameter", 1188, G__BCParameterDict_168_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncBCParameterDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalBCParameterDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcBCParameterDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__BCParameterDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__BCParameterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__BCParameterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BCParameterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__BCParameterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BCParameterDictLN_BCParameter = { "BCParameter" , 99 , -1 };
G__linked_taginfo G__BCParameterDictLN_vectorlEBCParametermUcOallocatorlEBCParametermUgRsPgR = { "vector<BCParameter*,allocator<BCParameter*> >" , 99 , -1 };
G__linked_taginfo G__BCParameterDictLN_reverse_iteratorlEvectorlEBCParametermUcOallocatorlEBCParametermUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<BCParameter*,allocator<BCParameter*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableBCParameterDict() {
  G__BCParameterDictLN_string.tagnum = -1 ;
  G__BCParameterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__BCParameterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BCParameterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__BCParameterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BCParameterDictLN_BCParameter.tagnum = -1 ;
  G__BCParameterDictLN_vectorlEBCParametermUcOallocatorlEBCParametermUgRsPgR.tagnum = -1 ;
  G__BCParameterDictLN_reverse_iteratorlEvectorlEBCParametermUcOallocatorlEBCParametermUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableBCParameterDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__BCParameterDictLN_string);
   G__get_linked_tagnum_fwd(&G__BCParameterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__BCParameterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BCParameterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BCParameterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BCParameterDictLN_BCParameter),sizeof(BCParameter),-1,36608,(char*)NULL,G__setup_memvarBCParameter,G__setup_memfuncBCParameter);
   G__get_linked_tagnum_fwd(&G__BCParameterDictLN_vectorlEBCParametermUcOallocatorlEBCParametermUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BCParameterDictLN_reverse_iteratorlEvectorlEBCParametermUcOallocatorlEBCParametermUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupBCParameterDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupBCParameterDict()");
  G__set_cpp_environmentBCParameterDict();
  G__cpp_setup_tagtableBCParameterDict();

  G__cpp_setup_inheritanceBCParameterDict();

  G__cpp_setup_typetableBCParameterDict();

  G__cpp_setup_memvarBCParameterDict();

  G__cpp_setup_memfuncBCParameterDict();
  G__cpp_setup_globalBCParameterDict();
  G__cpp_setup_funcBCParameterDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncBCParameterDict();
  return;
}
class G__cpp_setup_initBCParameterDict {
  public:
    G__cpp_setup_initBCParameterDict() { G__add_setup_func("BCParameterDict",(G__incsetup)(&G__cpp_setupBCParameterDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initBCParameterDict() { G__remove_setup_func("BCParameterDict"); }
};
G__cpp_setup_initBCParameterDict G__cpp_setup_initializerBCParameterDict;


//
// File generated by /home/osg/manageTier3SW/ATLASLocalRootBase/i686/root/5.34.07-i686-slc5-gcc4.3/bin/rootcint at Tue Jul  2 14:21:19 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME BCMathDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "BCMathDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace BCMath {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void BCMath_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("BCMath", 0 /*version*/, "./../BAT/BCMath.h", 35,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &BCMath_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void BCMath_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

/********************************************************
* BCMathDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableBCMathDict();

extern "C" void G__set_cpp_environmentBCMathDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../BAT/BCMath.h");
  G__cpp_reset_tagtableBCMathDict();
}
#include <new>
extern "C" int G__cpp_dllrevBCMathDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* BCMath */
static int G__BCMathDict_182_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) BCMath::LogGaus((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) BCMath::LogGaus((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) BCMath::LogGaus((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) BCMath::LogGaus((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) BCMath::LogPoisson((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) BCMath::ApproxBinomial((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) BCMath::LogApproxBinomial((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) BCMath::LogBinomFactor((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) BCMath::ApproxLogFact((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) BCMath::LogNoverK((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) BCMath::LogFact((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BCMath::Max((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BCMath::Max((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) BCMath::Max((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) BCMath::Max((float) G__double(libp->para[0]), (float) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BCMath::Min((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BCMath::Min((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) BCMath::Min((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) BCMath::Min((float) G__double(libp->para[0]), (float) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BCMath::Nint((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) BCMath::rms((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) BCMath::LogBreitWignerNonRel((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) BCMath::LogBreitWignerNonRel((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) BCMath::LogBreitWignerRel((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) BCMath::LogChi2((double) G__double(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) BCMath::LogVoigtian((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BCMath::RandomChi2(*(vector<double>*) libp->para[0].ref, (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BCMath::ECDF(*(vector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = BCMath::longestRuns(*(vector<bool>*) libp->para[0].ref);
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = BCMath::longestRunsChi2(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, *(vector<double>*) libp->para[2].ref);
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) BCMath::longestRunFrequency((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) BCMath::SplitGaussian((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BCMath::CacheFactorial((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMathDict_182_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) BCMath::Rvalue(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, *(unsigned int*) G__UIntref(&libp->para[2]), *(bool*) G__Boolref(&libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) BCMath::Rvalue(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, *(unsigned int*) G__UIntref(&libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* BCMath */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncBCMathDict {
 public:
  G__Sizep2memfuncBCMathDict(): p(&G__Sizep2memfuncBCMathDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncBCMathDict::*p)();
};

size_t G__get_sizep2memfuncBCMathDict()
{
  G__Sizep2memfuncBCMathDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceBCMathDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableBCMathDict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__BCMathDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BCMathDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BCMathDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BCMathDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BCMathDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__BCMathDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BCMathDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BCMathDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BCMathDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BCMathDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__BCMathDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BCMathDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BCMathDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BCMathDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BCMathDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* BCMath */
static void G__setup_memvarBCMath(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BCMathDictLN_BCMath));
   {
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarBCMathDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncBCMath(void) {
   /* BCMath */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BCMathDictLN_BCMath));
   G__memfunc_setup("LogGaus",690,G__BCMathDict_182_0_1, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - x d - - 0 '0' mean "
"d - - 0 '1' sigma g - - 0 'false' norm", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double, bool))(&BCMath::LogGaus) ), 0);
   G__memfunc_setup("LogPoisson",1037,G__BCMathDict_182_0_2, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x d - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double, double))(&BCMath::LogPoisson) ), 0);
   G__memfunc_setup("ApproxBinomial",1445,G__BCMathDict_182_0_3, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - n i - - 0 - k "
"d - - 0 - p", (char*)NULL, (void*) G__func2void( (double (*)(int, int, double))(&BCMath::ApproxBinomial) ), 0);
   G__memfunc_setup("LogApproxBinomial",1735,G__BCMathDict_182_0_4, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - n i - - 0 - k "
"d - - 0 - p", (char*)NULL, (void*) G__func2void( (double (*)(int, int, double))(&BCMath::LogApproxBinomial) ), 0);
   G__memfunc_setup("LogBinomFactor",1398,G__BCMathDict_182_0_5, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n i - - 0 - k", (char*)NULL, (void*) G__func2void( (double (*)(int, int))(&BCMath::LogBinomFactor) ), 0);
   G__memfunc_setup("ApproxLogFact",1306,G__BCMathDict_182_0_6, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) G__func2void( (double (*)(double))(&BCMath::ApproxLogFact) ), 0);
   G__memfunc_setup("LogNoverK",887,G__BCMathDict_182_0_7, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n i - - 0 - k", (char*)NULL, (void*) G__func2void( (double (*)(int, int))(&BCMath::LogNoverK) ), 0);
   G__memfunc_setup("LogFact",672,G__BCMathDict_182_0_8, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) G__func2void( (double (*)(int))(&BCMath::LogFact) ), 0);
   G__memfunc_setup("Max",294,G__BCMathDict_182_0_9, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - x i - - 0 - y", (char*)NULL, (void*) G__func2void( (int (*)(int, int))(&BCMath::Max) ), 0);
   G__memfunc_setup("Max",294,G__BCMathDict_182_0_10, 105, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - x h - - 0 - y", (char*)NULL, (void*) G__func2void( (int (*)(unsigned int, unsigned int))(&BCMath::Max) ), 0);
   G__memfunc_setup("Max",294,G__BCMathDict_182_0_11, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) G__func2void( (double (*)(double, double))(&BCMath::Max) ), 0);
   G__memfunc_setup("Max",294,G__BCMathDict_182_0_12, 100, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - x f - - 0 - y", (char*)NULL, (void*) G__func2void( (double (*)(float, float))(&BCMath::Max) ), 0);
   G__memfunc_setup("Min",292,G__BCMathDict_182_0_13, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - x i - - 0 - y", (char*)NULL, (void*) G__func2void( (int (*)(int, int))(&BCMath::Min) ), 0);
   G__memfunc_setup("Min",292,G__BCMathDict_182_0_14, 105, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - x h - - 0 - y", (char*)NULL, (void*) G__func2void( (int (*)(unsigned int, unsigned int))(&BCMath::Min) ), 0);
   G__memfunc_setup("Min",292,G__BCMathDict_182_0_15, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) G__func2void( (double (*)(double, double))(&BCMath::Min) ), 0);
   G__memfunc_setup("Min",292,G__BCMathDict_182_0_16, 100, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - x f - - 0 - y", (char*)NULL, (void*) G__func2void( (double (*)(float, float))(&BCMath::Min) ), 0);
   G__memfunc_setup("Nint",409,G__BCMathDict_182_0_17, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) G__func2void( (int (*)(double))(&BCMath::Nint) ), 0);
   G__memfunc_setup("rms",338,G__BCMathDict_182_0_18, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n D - - 10 - a", (char*)NULL, (void*) G__func2void( (double (*)(int, const double*))(&BCMath::rms) ), 0);
   G__memfunc_setup("LogBreitWignerNonRel",2002,G__BCMathDict_182_0_19, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - x d - - 0 - mean "
"d - - 0 - Gamma g - - 0 'false' norm", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double, bool))(&BCMath::LogBreitWignerNonRel) ), 0);
   G__memfunc_setup("LogBreitWignerRel",1703,G__BCMathDict_182_0_20, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x d - - 0 - mean "
"d - - 0 - Gamma", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double))(&BCMath::LogBreitWignerRel) ), 0);
   G__memfunc_setup("LogChi2",616,G__BCMathDict_182_0_21, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x i - - 0 - n", (char*)NULL, (void*) G__func2void( (double (*)(double, int))(&BCMath::LogChi2) ), 0);
   G__memfunc_setup("LogVoigtian",1123,G__BCMathDict_182_0_22, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x d - - 0 - sigma "
"d - - 0 - gamma", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double))(&BCMath::LogVoigtian) ), 0);
   G__memfunc_setup("RandomChi2",935,G__BCMathDict_182_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - randoms i - - 0 - K", (char*)NULL, (void*) G__func2void( (void (*)(vector<double>&, int))(&BCMath::RandomChi2) ), 0);
   G__memfunc_setup("ECDF",274,G__BCMathDict_182_0_24, 85, G__get_linked_tagnum(&G__BCMathDictLN_TH1D), -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - data", (char*)NULL, (void*) G__func2void( (TH1D* (*)(const vector<double>&))(&BCMath::ECDF) ), 0);
   G__memfunc_setup("longestRuns",1188,G__BCMathDict_182_0_25, 117, G__get_linked_tagnum(&G__BCMathDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 0, "u 'vector<bool,allocator<bool> >' 'vector<bool>' 11 - bitStream", (char*)NULL, (void*) G__func2void( (vector<int> (*)(const vector<bool>&))(&BCMath::longestRuns) ), 0);
   G__memfunc_setup("longestRunsChi2",1514,G__BCMathDict_182_0_26, 117, G__get_linked_tagnum(&G__BCMathDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - yMeasured u 'vector<double,allocator<double> >' 'vector<double>' 11 - yExpected "
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - sigma", (char*)NULL, (void*) G__func2void( (vector<double> (*)(const vector<double>&, const vector<double>&, const vector<double>&))(&BCMath::longestRunsChi2) ), 0);
   G__memfunc_setup("longestRunFrequency",2019,G__BCMathDict_182_0_27, 100, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - longestObserved h - - 0 - nTrials", (char*)NULL, (void*) G__func2void( (double (*)(unsigned int, unsigned int))(&BCMath::longestRunFrequency) ), 0);
   G__memfunc_setup("SplitGaussian",1351,G__BCMathDict_182_0_28, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&BCMath::SplitGaussian) ), 0);
   G__memfunc_setup("CacheFactorial",1385,G__BCMathDict_182_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - n", (char*)NULL, (void*) G__func2void( (void (*)(unsigned int))(&BCMath::CacheFactorial) ), 0);
   G__memfunc_setup("Rvalue",623,G__BCMathDict_182_0_30, 100, -1, -1, 0, 4, 1, 1, 32, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - chain_means u 'vector<double,allocator<double> >' 'vector<double>' 11 - chain_variances "
"h - - 11 - chain_length g - - 11 'true' strict", (char*)NULL, (void*) G__func2void( (double (*)(const vector<double>&, const vector<double>&, const unsigned int&, const bool&))(&BCMath::Rvalue) ), 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncBCMathDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalBCMathDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcBCMathDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__BCMathDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__BCMathDictLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__BCMathDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__BCMathDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BCMathDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__BCMathDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BCMathDictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__BCMathDictLN_BCMath = { "BCMath" , 110 , -1 };
G__linked_taginfo G__BCMathDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__BCMathDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableBCMathDict() {
  G__BCMathDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__BCMathDictLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__BCMathDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__BCMathDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BCMathDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__BCMathDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BCMathDictLN_TH1D.tagnum = -1 ;
  G__BCMathDictLN_BCMath.tagnum = -1 ;
  G__BCMathDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__BCMathDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableBCMathDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__BCMathDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__BCMathDictLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__BCMathDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__BCMathDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BCMathDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BCMathDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BCMathDictLN_TH1D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BCMathDictLN_BCMath),0,-1,0,(char*)NULL,G__setup_memvarBCMath,G__setup_memfuncBCMath);
   G__get_linked_tagnum_fwd(&G__BCMathDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__BCMathDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupBCMathDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupBCMathDict()");
  G__set_cpp_environmentBCMathDict();
  G__cpp_setup_tagtableBCMathDict();

  G__cpp_setup_inheritanceBCMathDict();

  G__cpp_setup_typetableBCMathDict();

  G__cpp_setup_memvarBCMathDict();

  G__cpp_setup_memfuncBCMathDict();
  G__cpp_setup_globalBCMathDict();
  G__cpp_setup_funcBCMathDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncBCMathDict();
  return;
}
class G__cpp_setup_initBCMathDict {
  public:
    G__cpp_setup_initBCMathDict() { G__add_setup_func("BCMathDict",(G__incsetup)(&G__cpp_setupBCMathDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initBCMathDict() { G__remove_setup_func("BCMathDict"); }
};
G__cpp_setup_initBCMathDict G__cpp_setup_initializerBCMathDict;

